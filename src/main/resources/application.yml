spring:
  #环境切换dev/prod
  active:
    profile: dev
  datasource:
#    driver-class-name: org.mariadb.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    username: root
    password: 123456
#    url: jdbc:mariadb://localhost:3309/fxyp?characterEncoding=utf-8&useSSL=false&useTimezone=true&serverTimezone=UTC
    url: jdbc:mariadb://localhost:3309/fxyp?characterEncoding=utf-8&useSSL=false&useTimezone=true&serverTimezone=GMT%2B8
    druid:
      #2.连接池配置
      #初始化连接池的连接数量 大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      #配置获取连接等待超时的时间
      max-wait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 30000
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭   个人建议如果想用SQL防火墙 建议打开
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filter:
        stat:
          merge-sql: true
          slow-sql-millis: 5000
      #3.基础监控配置
      web-stat-filter:
        enabled: true
        url-pattern: /*
        #设置不统计哪些URL
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        session-stat-enable: true
        session-stat-max-count: 100
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: true
        #设置监控页面的登录名和密码
        login-username: admin
        login-password: admin
        allow: 127.0.0.1
        #deny: 192.168.1.100
  servlet:
    multipart:
      enabled: true
      max-request-size: 100MB
      max-file-size: 500MB
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    #    time-zone: UTC
    time-zone: GMT+8
  #  rabbitmq:
  #    host: localhost
  #    port: 5672
  #    username: admin
  #    password: admin
  data:
#  config:
#    activate:
#      on-profile: dev
#    mongodb:
#      authentication-database: admin
#      host: localhost
#      port: 27017
#      username: admin
#      password: 123456
#      database: wb


# MyBatis配置
#mybatis:
#  # 搜索指定包别名
#  typeAliasesPackage: com.fx.pan.domain
#  # 配置mapper的扫描，找到所有的mapper.xml映射文件
#  mapperLocations: classpath*:mapper/**/*Mapper.xml
#  # 加载全局的配置文件
#  configLocation: classpath:mybatis/mybatis-config.xml

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: deleted # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)


# PageHelper分页插件
pagehelper:
  #分页插件会自动检测当前的数据库链接，自动选择合适的分页方式。 你可以配置helperDialect属性来指定分页插件使用哪种方言。
  #配置时，可以使用下面的缩写值：　
  #oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby
  #特别注意：使用 SqlServer2012 数据库时，需要手动指定为sqlserver2012，否则会使用 SqlServer2005 的方式进行分页。
  helper-dialect: mariadb
  #分页合理化参数，默认值为false。
  #当该参数设置为true时，pageNum<=0时会查询第一页，pageNum>pages（超过总数时），会查询最后一页。默认false时，直接根据参数进行查询。
  reasonable: true
  #支持通过 Mapper 接口参数来传递分页参数，默认值false，分页插件会从查询方法的参数值中，自动根据上面params配置的字段中取值，
  #查找到合适的值时就会自动分页。
  support-methods-arguments: true
  #为了支持startPage(Object params)方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值，
  #可以配置pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值，
  #默认值为：pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero。
  params: count=countSql

  # 不常用参数
  #默认值为false，该参数对使用RowBounds作为分页参数时有效。
  #当该参数设置为true时，会将RowBounds中的offset参数当成pageNum使用，可以用页码和页面大小两个参数进行分页。
  offset-as-page-num: false
  #默认值为false，该参数对使用RowBounds作为分页参数时有效。
  #当该参数设置为true时，使用RowBounds分页会进行 count 查询。
  row-bounds-with-count: false
  #默认值为false，当该参数设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果
  #（相当于没有执行分页查询，但是返回结果仍然是Page类型）。
  page-size-zero: false
  #默认值为false。设置为true时，允许在运行时根据多数据源自动识别对应方言的分页
  #（不支持自动选择sqlserver2012，只能使用sqlserver）。
  auto-runtime-dialect: false
  #默认值为true。当使用运行时动态数据源或没有设置helperDialect属性自动获取数据库类型时，会自动获取一个数据库连接，
  #通过该属性来设置是否关闭获取的这个连接，默认true关闭，设置为false后，不会关闭获取的连接，这个参数的设置要根据自己选择的数据源来决定。
  close-conn: true
  supportMethodsArguments: true
redis:
  # 地址
  host: localhost
  # 端口，默认为6379
  port: 6379
  # 数据库索引
  database: 0
  # 密码
  password:
  # 连接超时时间
  timeout: 10s
  lettuce:
    pool:
      # 连接池中的最小空闲连接
      min-idle: 0
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池的最大数据库连接数
      max-active: 8
      # #连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1ms

#fx:
#  storageType: 0
#  enableFileAudit: true
#  # 文件存储位置 (0 为本地, 1 为腾讯COS对象存储 )
#  fileStorageType: 0
#  # 文件本地存储根路径
#  fileStorageRootPath: file
#  #本地存储绝对路径,resources目录下
#  localStoragePath: static/file
#  staticPath: D:/ideaWorkspace/pan/static
#  absoluteFilePath: D:/ideaWorkspace/pan/static/file
#  absoluteCachePath: D:/ideaWorkspace/pan/static/cache
file:
  uploadFolder: D:/ideaWorkspace/pan/static/image/
  upload: D:/ideaWorkspace/pan/target/static/file
  accessPath: /images/
  staticAccessPath: /images/**

#  annoypath: "/user/login", "/user/register" ,"/filetransfer/download"

# token配置
token:
  # 令牌自定义标识
  header: Authorization
  # 令牌密钥
  secret: abcdefghijklmnopqrstuvwxyz
  # 令牌有效期（默认30分钟）
  expireTime: 60


#腾讯cos
#tencent:
#  cos:
#    accessKey: AKIDqVt0rSmpb6KHyX3PWNyNa2HGzRdaMs9B
#    secretKey: oMgkY6PTHpEOIxNaXFjz0mIZbOuABwRg
#    bucketRegion: ap-beijing
#    bucketName: fxcloud-1254493079
#    path: https://fxcloud-1254493079.cos.ap-beijing.myqcloud.com

#百度OCR
baidu:
  ocr:
    APP_ID: 11487965
    API_KEY: 4RHdwmUxjMYSgSBcUHPhbiQm
    SECRET_KEY: mGBce6uadRUtDvH1ZtYmqDrNewltWGKW
server:
  port: 8080
  servlet:
    ## 全局controller访问前缀
    context-path: /api
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 2048
